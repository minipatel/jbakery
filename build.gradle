plugins {
    id "com.moowork.node" version "0.11"
    id 'java'
    id 'idea'
    id 'org.ajoberstar.grgit' version '1.4.2'
    id 'org.ajoberstar.release-opinion' version '1.4.2'

    id "com.jfrog.bintray" version "1.6"
    id 'maven-publish'

    id 'application'
}

repositories {
    mavenCentral()
    jcenter()
}

import org.ajoberstar.gradle.git.release.opinion.Strategies

import java.text.SimpleDateFormat

release {
    grgit = org.ajoberstar.grgit.Grgit.open(project.rootDir)
    defaultVersionStrategy = Strategies.SNAPSHOT
}

tasks.release.dependsOn ':publish'

ext {
    def grgit = org.ajoberstar.grgit.Grgit.open(project.rootDir)

    revision = grgit.head().id
    shortMessage = grgit.head().shortMessage

    // add these properties to your ~/.gradle/gradle.properties file
    bintrayUser = project.hasProperty('bintrayUser') ? bintrayUser : 'jenkins'
    bintrayApiKey = project.hasProperty('bintrayApiKey') ? bintrayApiKey : System.getenv("NEXUS_PASS")
}


ext {
    vertxVersion = '3.2.1'
    springVersion = '4.2.5.RELEASE'
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.16.6'
    testCompileOnly 'org.projectlombok:lombok:1.16.6'

    compile 'org.slf4j:slf4j-api:1.7.7'
    compile 'org.apache.logging.log4j:log4j-api:2.4.1'

    compile 'org.apache.logging.log4j:log4j-core:2.4.1'
    compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.4.1'

    compile 'org.jbake:jbake-core:2.4.0'

    compile "org.springframework:spring-core:${springVersion}"
    compile "org.springframework:spring-context:${springVersion}"
    compile "org.springframework:spring-beans:${springVersion}"

    compile 'com.github.rworsnop:vertx-beans:1.2.1'
    compile "io.vertx:vertx-core:${vertxVersion}"
    compile "io.vertx:vertx-web:${vertxVersion}"

    compile "io.vertx:vertx-web-templ-thymeleaf:${vertxVersion}"
    compile "nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:1.3.1"

    compile "io.vertx:vertx-web-templ-handlebars:${vertxVersion}"

    testCompile "io.vertx:vertx-unit:${vertxVersion}"
    testCompile "junit:junit:4.11"
}

idea {
    module {
        scopes.COMPILE.plus += [configurations.compileOnly]
    }
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

mainClassName = "netdava.jbakery.web.Main"

// gradle + node + bower integration
// https://objectpartners.com/2015/04/29/using-gradle-and-bower-to-manage-jscss-dependencies/
node {
    version = '4.2.2'
    npmVersion = '2.14.4'
    download = true
}

task npmCacheConfig(type: NpmTask) {
    description = "Configure the NPM cache"
    def npmCacheDir = "${gradle.getGradleUserHomeDir()}/caches/npm"
    outputs.files file(npmCacheDir)
    args = ['config', 'set', 'cache', npmCacheDir]
}

task npmPackages(type: NpmTask, dependsOn: npmCacheConfig) {
    description = "Install Node.js packages"
    args = ['install']
    inputs.files file('package.json')
    outputs.files file('node_modules')
}

task bowerInstall(type: NodeTask) {
    script = file('node_modules/bower/bin/bower')
    args = ["--config.storage.cache=${gradle.getGradleUserHomeDir()}/caches/bower/cache",
            "--config.storage.packages=${gradle.getGradleUserHomeDir()}/caches/bower/packages",
            "--config.storage.registry=${gradle.getGradleUserHomeDir()}/caches/bower/registry",
            'install']
    inputs.files file('bower.json')
    outputs.files file('webroot/components')
    dependsOn npmPackages
}

build.dependsOn bowerInstall

bintray {
    user = bintrayUser
    key = bintrayApiKey
    publications = ['jbakery', 'jbakerySources']

    publish = true

    pkg {
        repo = 'maven'
        name = 'jbakery'
        userOrg = 'netdava'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/netdava/jbakery'
        websiteUrl = 'https://github.com/netdava/jbakery'
        desc = 'Static website generator with a twist'
        issueTrackerUrl = 'https://github.com/netdava/jbakery/issues'
        labels = ['jbake', 'static website', 'html', 'web', 'jekyll']
        publicDownloadNumbers = true
        githubRepo = 'netdava/jbakery'

        version {
            name = version
            desc = 'Static website generator with a twist'
            released = new SimpleDateFormat('yyyy-MM-dd\'T\'HH:mm:ss.SSSZZ').format(new Date())
            vcsTag = version.toString()
        }
    }
}

task sourceJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allJava
}

publishing {
    publications {
        jbakery(MavenPublication) {
            groupId 'com.netdava'
            artifactId 'jbakery'
            from components.java
        }
        jbakerySources(MavenPublication) {
            groupId 'com.netdava'
            artifactId 'jbakery'
            from components.java
            artifact sourceJar {
                classifier 'sources'
            }
        }
    }
}